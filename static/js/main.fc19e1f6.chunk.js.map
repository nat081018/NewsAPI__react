{"version":3,"sources":["App.js","components/button/Button.jsx","components/table/Table.jsx","components/search/Search.jsx","constants.js","serviceWorker.js","config/allStateInStore.js","config/store.js","index.js"],"names":["Component","Button","onClick","className","children","type","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Sort","sortKey","activeSortKey","onSort","sortClass","classNames","Table","props","state","isSortReverse","bind","this","setState","onDismiss","sortedList","reverseSortedList","style","width","map","item","key","objectID","href","url","title","author","num_comments","points","Search","value","onChange","onSubmit","PATH_BASE","App","_isMounted","needsToSearchTopStories","searchTerm","results","setSearchTopStories","result","hits","page","prevState","searchKey","oldHits","updatedHits","isLoading","updateSearchTopStoriesState","fetchSearchTopStories","axios","then","data","catch","error","onSearchChange","event","target","onSearchSubmit","preventDefault","id","filter","ButtonWithLoading","Loading","rest","Boolean","window","location","hostname","match","allStateInStore","combineReducers","todo","action","concat","text","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.fc19e1f6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { sortBy } from \"lodash\";\nimport classNames from \"classnames\";\nimport \"./App.css\";\nimport Table from \"./components/table/Table.jsx\";\nimport Button from \"./components/button/Button.jsx\";\nimport Search from \"./components/search/Search.jsx\";\nimport {\n  DEFAULT_QUERY,\n  DEFAULT_HPP,\n  PATH_BASE,\n  PATH_SEARCH,\n  PARAM_SEARCH,\n  PARAM_PAGE,\n  PARAM_HPP,\n} from \"./constants.js\";\n\nconst updateSearchTopStoriesState = (hits, page) => (prevState) => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n\n  const updatedHits = [...oldHits, ...hits];\n\n  return {\n    results: {\n      ...results,\n      [searchKey]: { hits: updatedHits, page },\n    },\n    isLoading: false,\n  };\n};\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: null,\n      searchKey: \"\",\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false,\n      sortKey: \"NONE\",\n      isSortReverse: false,\n    };\n\n    // this.needsToSearchTopStories = this.needsToSearchTopStories.bind(this);\n    // this.setSearchTopStories = this.setSearchTopStories.bind(this);\n    // this.fetchSearchTopStories = this.fetchSearchTopStories.bind(this);\n    // this.onSearchChange = this.onSearchChange.bind(this);\n    // this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    // this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopStories = (searchTerm) => !this.state.results[searchTerm];\n\n  setSearchTopStories = (result) => {\n    const { hits, page } = result;\n    this.setState(updateSearchTopStoriesState(hits, page));\n  };\n\n  fetchSearchTopStories = (searchTerm, page = 0) => {\n    this.setState({ isLoading: true });\n\n    axios(\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\n    )\n      .then((result) => this.setSearchTopStories(result.data))\n      .catch((error) => this._isMounted && this.setState({ error }));\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  onSearchChange = (event) => this.setState({ searchTerm: event.target.value });\n\n  onSearchSubmit = (event) => {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n\n    event.preventDefault();\n  };\n\n  onDismiss = (id) => {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = (item) => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n\n    this.setState({\n      results: {\n        ...results,\n        [searchKey]: { hits: updatedHits, page },\n      },\n    });\n  };\n\n  render() {\n    const { searchTerm, results, searchKey, error, isLoading } = this.state;\n\n    const page =\n      (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list =\n      (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search\n            value={searchTerm}\n            onChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n            Search\n          </Search>\n        </div>\n        {error ? (\n          <div className=\"interactions\">\n            <p>Something went wrong.</p>\n          </div>\n        ) : (\n          <Table list={list} onDismiss={this.onDismiss} />\n        )}\n        <div className=\"interactions\">\n          <ButtonWithLoading\n            isLoading={isLoading}\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n          >\n            More\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Loading = () => <div>Loading ...</div>;\n\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\n  isLoading ? <Loading /> : <Component {...rest} />;\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst Button = ({ onClick, className = \"\", children }) => (\r\n  <button onClick={onClick} className={className} type=\"button\">\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../button/Button.jsx\";\r\nimport classNames from \"classnames\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nconst SORTS = {\r\n  NONE: (list) => list,\r\n  TITLE: (list) => sortBy(list, \"title\"),\r\n  AUTHOR: (list) => sortBy(list, \"author\"),\r\n  COMMENTS: (list) => sortBy(list, \"num_comments\").reverse(),\r\n  POINTS: (list) => sortBy(list, \"points\").reverse(),\r\n};\r\n\r\nconst Sort = ({ sortKey, activeSortKey, onSort, children }) => {\r\n  const sortClass = classNames(\"button-inline\", {\r\n    \"button-active\": sortKey === activeSortKey,\r\n  });\r\n\r\n  return (\r\n    <Button onClick={() => onSort(sortKey)} className={sortClass}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sortKey: \"NONE\",\r\n      isSortReverse: false,\r\n    };\r\n\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse =\r\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n  }\r\n\r\n  render() {\r\n    const { list, onDismiss } = this.props;\r\n\r\n    const { sortKey, isSortReverse } = this.state;\r\n\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n\r\n    return (\r\n      <div className=\"table\">\r\n        <div className=\"table-header\">\r\n          <span style={{ width: \"40%\" }}>\r\n            <Sort\r\n              sortKey={\"TITLE\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n            >\r\n              Title\r\n            </Sort>\r\n          </span>\r\n          <span style={{ width: \"30%\" }}>\r\n            <Sort\r\n              sortKey={\"AUTHOR\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n            >\r\n              Author\r\n            </Sort>\r\n          </span>\r\n          <span style={{ width: \"10%\" }}>\r\n            <Sort\r\n              sortKey={\"COMMENTS\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n            >\r\n              Comments\r\n            </Sort>\r\n          </span>\r\n          <span style={{ width: \"10%\" }}>\r\n            <Sort\r\n              sortKey={\"POINTS\"}\r\n              onSort={this.onSort}\r\n              activeSortKey={sortKey}\r\n            >\r\n              Points\r\n            </Sort>\r\n          </span>\r\n          <span style={{ width: \"10%\" }}>Archive</span>\r\n        </div>\r\n        {reverseSortedList.map((item) => (\r\n          <div key={item.objectID} className=\"table-row\">\r\n            <span style={{ width: \"40%\" }}>\r\n              <a href={item.url}>{item.title}</a>\r\n            </span>\r\n            <span style={{ width: \"30%\" }}>{item.author}</span>\r\n            <span style={{ width: \"10%\" }}>{item.num_comments}</span>\r\n            <span style={{ width: \"10%\" }}>{item.points}</span>\r\n            <span style={{ width: \"10%\" }}>\r\n              <Button\r\n                onClick={() => onDismiss(item.objectID)}\r\n                className=\"button-inline\"\r\n              >\r\n                Dismiss\r\n              </Button>\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Search = ({ value, onChange, onSubmit, children }) => (\r\n  <form onSubmit={onSubmit}>\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n    <button type=\"submit\">{children}</button>\r\n  </form>\r\n);\r\n\r\nexport default Search;\r\n","export const DEFAULT_QUERY = \"redux\";\r\nexport const DEFAULT_HPP = \"100\";\r\n\r\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1\";\r\nexport const PATH_SEARCH = \"/search\";\r\nexport const PARAM_SEARCH = \"query=\";\r\nexport const PARAM_PAGE = \"page=\";\r\nexport const PARAM_HPP = \"hitsPerPage=\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\n\r\nfunction todos(state = [], action) {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return state.concat([action.text]);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst allStateInStore = combineReducers({\r\n  todo: todos,\r\n});\r\n\r\nexport default allStateInStore;\r\n","import React from \"react\";\r\nimport { createStore } from \"redux\";\r\nimport allStateInStore from \"./allStateInStore\";\r\n\r\nconst store = createStore(allStateInStore);\r\n// если store поустой выкинет кучу ощибок\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./config/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// if (module.hot) {\n//   module.hot.accept();\n// }\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}